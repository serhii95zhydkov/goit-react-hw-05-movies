{"version":3,"file":"static/js/124.c040196b.chunk.js","mappings":"8PACA,EAAyB,6BAAzB,EAAgE,8BAAhE,EAA0G,gC,SC0E1G,EArEqB,WAAO,IAAD,IACnBA,ECFqB,WAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBJ,GAFpB,OAETK,EAFS,OAGfN,EAASM,GAHM,gDAKfC,QAAQC,IAAI,KAAMC,SALH,yDAAH,qDAQhBL,GACD,GAAE,CAACH,IAEGH,CACR,CDfeY,GAIRC,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEvCC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,iCACE,mBACEC,UAAWC,EACXC,KAAK,SACLC,QAAS,kBAAML,EAASJ,EAAf,EAHX,4BAOCb,IACC,qBAASmB,UAAWC,EAApB,WACE,gBACEG,IAAG,UAdM,mCAcN,OAAkBvB,EAAMwB,aAC3BC,IAAI,SACJC,MAAO,OAET,iBAAKP,UAAWC,EAAhB,WACE,4BACE,wBAAKpB,EAAM2B,SACX,wCAAgBC,KAAKC,MAA2B,GAArB7B,EAAM8B,cAAjC,QACA,sCACA,uBAAI9B,EAAM+B,YACV,oCACA,wBACG/B,EAAMgC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALD,EADO,UAKtB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CACEE,GAAE,kBAAapC,EAAMkC,GAAnB,SACFnB,MAAO,CAAEC,KAAMH,GAFjB,qBAOF,yBACE,SAAC,KAAD,CACEuB,GAAE,kBAAapC,EAAMkC,GAAnB,YACFnB,MAAO,CAAEC,KAAMH,GAFjB,oCAYZ,SAAC,KAAD,MAGL,C,sLEvEKwB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBnC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBoC,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNK,MAAOA,KAHiB,uBACpBrC,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdD,EAAe,mCAAG,WAAM2B,GAAN,yFACNG,EAASM,IAAT,iBAAuBT,IADjB,uBACrB1B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfsC,EAAY,mCAAG,WAAMZ,GAAN,yFACHG,EAASM,IAAT,iBAAuBT,EAAvB,aADG,uBAClB1B,EADkB,EAClBA,KADkB,kBAEnBA,EAAKuC,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMd,GAAN,yFACNG,EAASM,IAAT,iBAAuBT,EAAvB,aADM,uBACrB1B,EADqB,EACrBA,KADqB,kBAEtBA,EAAKyC,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/movieDetails.module.css?c148","pages/MovieDetails/MovieDetails.jsx","hooks/useFetchMovie.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"movieDetails_button__nFp7V\",\"section\":\"movieDetails_section__8v4lN\",\"container\":\"movieDetails_container__0I5or\"};","import { useNavigate, useLocation, Outlet, Link } from 'react-router-dom';\n\nimport { useFetchMovie } from 'hooks/useFetchMovie';\n\nimport styles from './movieDetails.module.css';\n\nconst MovieDetails = () => {\n  const movie = useFetchMovie();\n\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  const navigate = useNavigate();\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => navigate(backLinkHref)}\n      >\n        &#10094; Go back\n      </button>\n      {movie && (\n        <section className={styles.section}>\n          <img\n            src={`${baseImgUrl}${movie.poster_path}`}\n            alt=\"poster\"\n            width={300}\n          />\n          <div className={styles.container}>\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <h2>Additional information</h2>\n              <ul>\n                <li>\n                  <Link\n                    to={`/movies/${movie.id}/cast`}\n                    state={{ from: backLinkHref }}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to={`/movies/${movie.id}/reviews`}\n                    state={{ from: backLinkHref }}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </section>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/moviesApi';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  return movie;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '133ce26a248c21c85e6798a27724efec',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getQueryMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["movie","useState","setMovie","movieId","useParams","useEffect","fetchMovie","getMovieDetails","data","console","log","message","useFetchMovie","backLinkHref","useLocation","state","from","navigate","useNavigate","className","styles","type","onClick","src","poster_path","alt","width","title","Math","round","vote_average","overview","genres","map","id","name","to","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getQueryMovies","query","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}