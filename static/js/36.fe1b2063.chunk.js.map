{"version":3,"file":"static/js/36.fe1b2063.chunk.js","mappings":"oPACA,EAAuB,sB,SCwCvB,EAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEHC,EAAAA,EAAAA,IAAgBJ,GAFb,OAEhBK,EAFgB,OAGtBN,EAAWM,GAHW,gDAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,qDAQvBL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAWX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADkB,IAO7B,OACE,+BACE,eAAIG,UAAWC,EAAf,SACuB,IAApBN,EAASO,OACN,2CACAP,KAIX,C,sLCrCKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBlB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBmB,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNK,MAAOA,KAHiB,uBACpBpB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdqB,EAAe,mCAAG,WAAMf,GAAN,yFACNM,EAASM,IAAT,iBAAuBZ,IADjB,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfsB,EAAY,mCAAG,WAAMhB,GAAN,yFACHM,EAASM,IAAT,iBAAuBZ,EAAvB,aADG,uBAClBN,EADkB,EAClBA,KADkB,kBAEnBA,EAAKuB,MAFc,2CAAH,sDAKZxB,EAAe,mCAAG,WAAMO,GAAN,yFACNM,EAASM,IAAT,iBAAuBZ,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,EAAKwB,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/reviews.module.css?f10c","pages/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__djUl7\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/moviesApi';\n\nimport styles from './reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {elements.length === 0\n          ? \"We don't have any reviews for this movie\"\n          : elements}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '133ce26a248c21c85e6798a27724efec',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getQueryMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","data","console","log","message","elements","map","id","author","content","className","styles","length","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getQueryMovies","query","getMovieDetails","getMovieCast","cast","results"],"sourceRoot":""}