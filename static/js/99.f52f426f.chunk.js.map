{"version":3,"file":"static/js/99.f52f426f.chunk.js","mappings":"oPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mB,SC6C3E,EAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAaJ,GAFb,OAEbK,EAFa,OAGnBN,EAAQM,GAHW,gDAKnBC,QAAQC,IAAI,KAAMC,SALC,yDAAH,qDAQpBL,GACD,GAAE,CAACH,IAEJ,IAEMS,EAAWX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACxB,gBAAaC,UAAWC,EAAxB,UACGF,IACC,gBAAKG,IAAG,UALK,mCAKL,OAAkBH,GAAgBI,IAAI,UAAUC,MAAM,SAEhE,cAAGJ,UAAWC,EAAd,UACE,uBAAIJ,OAEN,cAAGG,UAAWC,EAAd,SAA4BH,MAPrBF,EADe,IAW1B,OACE,+BACE,eAAII,UAAWC,EAAf,SACuB,IAApBP,EAASW,OACN,wCACAX,KAIX,C,sLC1CKY,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAI,uBADL,uBACvBtB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBuB,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNK,MAAOA,KAHiB,uBACpBxB,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdyB,EAAe,mCAAG,WAAMnB,GAAN,yFACNU,EAASM,IAAT,iBAAuBhB,IADjB,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfD,EAAY,mCAAG,WAAMO,GAAN,yFACHU,EAASM,IAAT,iBAAuBhB,EAAvB,aADG,uBAClBN,EADkB,EAClBA,KADkB,kBAEnBA,EAAKP,MAFc,2CAAH,sDAKZiC,EAAe,mCAAG,WAAMpB,GAAN,yFACNU,EAASM,IAAT,iBAAuBhB,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,EAAK2B,SAFiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/cast.module.css?3847","pages/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__BjE1s\",\"item\":\"cast_item__rFGCo\",\"text\":\"cast_text__UlQf6\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'services/moviesApi';\n\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        setCast(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n  const elements = cast.map(({ id, name, character, profile_path }) => (\n    <li key={id} className={styles.item}>\n      {profile_path && (\n        <img src={`${baseImgUrl}${profile_path}`} alt=\"profile\" width=\"200\" />\n      )}\n      <p className={styles.text}>\n        <b>{name}</b>\n      </p>\n      <p className={styles.text}>{character}</p>\n    </li>\n  ));\n  return (\n    <>\n      <ul className={styles.list}>\n        {elements.length === 0\n          ? \"We don't have any cast for this movie\"\n          : elements}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '133ce26a248c21c85e6798a27724efec',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getQueryMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","getMovieCast","data","console","log","message","elements","map","id","name","character","profile_path","className","styles","src","alt","width","length","instance","axios","baseURL","params","api_key","getTrendingMovies","get","getQueryMovies","query","getMovieDetails","getMovieReviews","results"],"sourceRoot":""}